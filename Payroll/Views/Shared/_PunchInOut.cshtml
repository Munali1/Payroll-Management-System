@using Payroll.Application.Services.ServiceInterface
@using System.Security.Claims

@inject IEmployeeService employeeService
@inject IAttendenceService attendenceService 
@model Payroll.Domain.Entities.Attendence

<ul class="navbar-nav">
    @if (User.IsInRole("Employee"))
    {
        string userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
        int id = employeeService.getEmpId(userId);

        <li class="nav-item">
            @if (Model == null || Model.inTime == null)
            {
                <form asp-controller="Attendance" asp-action="PunchIn" asp-route-id="@id" method="post">
                    <button type="submit" class="btn btn-success">Punch In</button>
                </form>
            }
            else if (Model.outTime == null)
            {
                <form asp-controller="Attendance" asp-action="PunchOut" asp-route-id="@id" method="post">
                    <button id="PunchOut" type="submit" class="btn btn-danger" onclick="showTotalWorkingHours(@id)">Punch Out</button>
                </form>
            }
        </li>
    }
</ul>
<script>

    function showTotalWorkingHours(empId) {
      
        $.ajax({
            url: '/Attendance/getTotalWorkingHours', 
            type: 'GET',
            data: { empId: empId },
            success: function (data) {
                if (data.hours !== undefined && data.minutes !== undefined) {
                    alert(`You have worked for: ${data.hours} hours and ${data.minutes} minutes.`);
                } else {
                    alert('Error fetching total working hours.');
                }
            },
            error: function () {
                alert('An error occurred while fetching total working hours.');
            }
        });
    }
</script>